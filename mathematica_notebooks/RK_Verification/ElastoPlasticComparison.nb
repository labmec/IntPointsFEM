(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    117182,       2348]
NotebookOptionsPosition[    113374,       2272]
NotebookOutlinePosition[    113709,       2287]
CellTagsIndexPosition[    113666,       2284]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Set Directory\t", "Section",
 CellChangeTimes->{{3.764693820732603*^9, 
  3.764693826379757*^9}},ExpressionUUID->"27a31806-903c-4c8c-9e8b-\
a017871447a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.764693828213853*^9, 3.764693835827722*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2dee00b5-f4ce-4041-8f31-a4f79100d19c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position extractor by names", "Subchapter",
 CellChangeTimes->{{3.764694023771616*^9, 3.764694056154105*^9}, {
  3.7646951247315493`*^9, 3.764695128105873*^9}, {3.764695161107575*^9, 
  3.7646951731136703`*^9}},ExpressionUUID->"6e910120-a3db-4ea9-b498-\
6ea54969cc85"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractorByNames", "[", 
    RowBox[{"labels_", ",", "varlabels_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"notfoundQ", ",", "xpos", ",", "ypos"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"notfoundQ", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"labels", ",", 
           RowBox[{"varlabels", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"notfoundQ", ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Not able to find the provided label = \>\"", ",", 
          RowBox[{
           RowBox[{"varlabels", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ";"}]}], "]"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xpos", "=", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"labels", ",", 
              RowBox[{"varlabels", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"notfoundQ", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"labels", ",", 
           RowBox[{"varlabels", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"notfoundQ", ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Not able to find the provided label = \>\"", ",", 
          RowBox[{
           RowBox[{"varlabels", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ";"}]}], "]"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ypos", "=", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"labels", ",", 
              RowBox[{"varlabels", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"xpos", ",", "ypos"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764694048021459*^9, 3.764694119554277*^9}, {
  3.7646941956904993`*^9, 3.764694222201326*^9}, {3.7646943510017223`*^9, 
  3.764694367649922*^9}, {3.764695133563197*^9, 3.764695148114668*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a42d8661-0daa-4689-b59d-821f21c3049b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading RK raw data", "Subchapter",
 CellChangeTimes->{{3.76469389548438*^9, 3.764693899499085*^9}, {
  3.7646940160342073`*^9, 
  3.764694016386249*^9}},ExpressionUUID->"726c7637-3345-47a4-9356-\
d09f066d87ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rkrawdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<ElastoPlasticRKdata.txt\>\"", ",", "\"\<Data\>\""}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rklabels", "=", 
   RowBox[{"rkrawdata", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rkdata", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"rkrawdata", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.764693901169429*^9, 3.76469393119716*^9}, {
  3.76469446602396*^9, 3.764694489472209*^9}, {3.764695335602457*^9, 
  3.764695335800591*^9}, {3.76469546855235*^9, 3.7646954690238247`*^9}, {
  3.764700013458132*^9, 3.7647000153993797`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e12ea276-efc2-471b-9bd4-155992e6ebb6"],

Cell[CellGroupData[{

Cell[BoxData["rklabels"], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"bf43ddf3-a32a-4239-a833-ca10375125a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"radius\"\>", ",", "\<\"u\"\>", ",", "\<\"sigma_rr\"\>", 
   ",", "\<\"sigma_tt\"\>", ",", "\<\"sigma_zz\"\>", ",", "\<\"eps_rr\"\>", 
   ",", "\<\"eps_tt\"\>", ",", "\<\"eps_zz\"\>", ",", "\<\"eps_p_rr\"\>", 
   ",", "\<\"eps_p_tt\"\>", ",", "\<\"eps_p_zz\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.764695558852783*^9, 3.764696357108363*^9, 3.7646964478429832`*^9, {
   3.7646966721762342`*^9, 3.764696697968107*^9}, {3.764696738210647*^9, 
   3.7646967772573547`*^9}, 3.7646968957236633`*^9, 3.7646970057736588`*^9, {
   3.764697308097415*^9, 3.764697351302252*^9}, {3.764697391779326*^9, 
   3.7646974005478687`*^9}, 3.764697432373087*^9, 3.764698248466587*^9, 
   3.764698481580513*^9, 3.764699003528489*^9, 3.764699097746152*^9, {
   3.7646997006009197`*^9, 3.764699713652666*^9}, 3.7647000347496223`*^9, 
   3.764700156610673*^9, 3.764700242072926*^9, 3.7647005241116447`*^9, 
   3.764701297707872*^9, 3.772509263426301*^9, 3.7725093995223427`*^9, 
   3.772509546274963*^9, 3.7725095928708572`*^9, {3.772509675172477*^9, 
   3.772509723275816*^9}, 3.772510103533929*^9, 3.7770284658395967`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"0da76269-f72d-4e1a-b4b6-2c62de050661"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading Paraview data", "Subchapter",
 CellChangeTimes->{{3.764693911710249*^9, 3.764693914156918*^9}, {
  3.764694238930593*^9, 3.764694270562768*^9}, {3.7646944475679483`*^9, 
  3.7646944714807243`*^9}, {3.764695252547604*^9, 
  3.764695295074107*^9}},ExpressionUUID->"938da9f5-dbfb-4145-9c7e-\
d5b937d3f5c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pvrawdata", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<ElastoPlasticFEMdata.csv\>\"", ",", "\"\<Data\>\""}], 
      "]"}]}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pvrawdata", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<ElastoPlasticIntPoints-CPU.csv\>\"", ",", "\"\<Data\>\""}],
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pvrawdata", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<ElastoPlasticIntPoints.csv\>\"", ",", "\"\<Data\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"pvlabels", "=", 
    RowBox[{"pvrawdata", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pvdata", " ", "=", " ", 
     RowBox[{"Drop", "[", 
      RowBox[{"pvrawdata", ",", "1"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.764695302394731*^9, 3.764695363090374*^9}, {
   3.764695401314809*^9, 3.764695419488117*^9}, 3.764700031268713*^9, {
   3.772509386901273*^9, 3.7725093986761*^9}, {3.777028458271307*^9, 
   3.777028463461609*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"81a5d3b4-291e-4b87-8e0d-f921969edca3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Displacement:0\"\>", ",", "\<\"Displacement:1\"\>", 
   ",", "\<\"Displacement:2\"\>", ",", "\<\"FailureType\"\>", 
   ",", "\<\"Strain:0\"\>", ",", "\<\"Strain:1\"\>", ",", "\<\"Strain:2\"\>", 
   ",", "\<\"Strain:3\"\>", ",", "\<\"Strain:4\"\>", ",", "\<\"Strain:5\"\>", 
   ",", "\<\"Strain:6\"\>", ",", "\<\"Strain:7\"\>", ",", "\<\"Strain:8\"\>", 
   ",", "\<\"StrainPlastic:0\"\>", ",", "\<\"StrainPlastic:1\"\>", 
   ",", "\<\"StrainPlastic:2\"\>", ",", "\<\"StrainPlastic:3\"\>", 
   ",", "\<\"StrainPlastic:4\"\>", ",", "\<\"StrainPlastic:5\"\>", 
   ",", "\<\"StrainPlastic:6\"\>", ",", "\<\"StrainPlastic:7\"\>", 
   ",", "\<\"StrainPlastic:8\"\>", ",", "\<\"Stress:0\"\>", 
   ",", "\<\"Stress:1\"\>", ",", "\<\"Stress:2\"\>", ",", "\<\"Stress:3\"\>", 
   ",", "\<\"Stress:4\"\>", ",", "\<\"Stress:5\"\>", ",", "\<\"Stress:6\"\>", 
   ",", "\<\"Stress:7\"\>", ",", "\<\"Stress:8\"\>", 
   ",", "\<\"vtkValidPointMask\"\>", ",", "\<\"arc_length\"\>", 
   ",", "\<\"Points:0\"\>", ",", "\<\"Points:1\"\>", 
   ",", "\<\"Points:2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.764695759463358*^9, 3.7646963573116693`*^9, 3.764696448044125*^9, {
   3.764696672380867*^9, 3.76469669816716*^9}, {3.764696738411743*^9, 
   3.764696777453964*^9}, 3.7646968959235153`*^9, 3.764697005969393*^9, {
   3.764697308292527*^9, 3.7646973514999743`*^9}, {3.7646973919748774`*^9, 
   3.764697400745057*^9}, 3.7646974325713463`*^9, 3.7646982486649847`*^9, 
   3.764698481778924*^9, {3.7646989930262213`*^9, 3.764699003726832*^9}, 
   3.764699097944908*^9, {3.764699700802486*^9, 3.764699713848607*^9}, 
   3.764700034942384*^9, 3.764700156807755*^9, 3.764700242263483*^9, 
   3.764700524305262*^9, 3.764701297899878*^9, 3.772509263626658*^9, 
   3.7725093996998377`*^9, 3.772509546478458*^9, 3.772509593076112*^9, {
   3.772509675375298*^9, 3.772509723477194*^9}, 3.7725101037414713`*^9, 
   3.7770284663486567`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"99fe8e0d-f2b7-429f-a290-12b022e2890e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Applying radius shift because plot over line start on rw (?_?)\
\>", "Subchapter",
 CellChangeTimes->{{3.764695592311633*^9, 
  3.764695638910536*^9}},ExpressionUUID->"3e93b563-6a9f-4dd9-905d-\
58666a7c0544"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rw", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rpos", "=", 
   RowBox[{
    RowBox[{"ExtractorByNames", "[", 
     RowBox[{"pvlabels", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<arc_length\>\"", ",", "\"\<arc_length\>\""}], "}"}]}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pvdata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", "rpos", "}"}]}], "]"}], "]"}], "+=", "rw"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.764695696768276*^9, 3.764695748213791*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"909362ee-3571-482b-a79f-5883fce2533c"],

Cell[CellGroupData[{

Cell[BoxData["pvlabels"], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"0309dfa3-7828-4b7d-9dd7-4f643bb6acc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Displacement:0\"\>", ",", "\<\"Displacement:1\"\>", 
   ",", "\<\"Displacement:2\"\>", ",", "\<\"FailureType\"\>", 
   ",", "\<\"Strain:0\"\>", ",", "\<\"Strain:1\"\>", ",", "\<\"Strain:2\"\>", 
   ",", "\<\"Strain:3\"\>", ",", "\<\"Strain:4\"\>", ",", "\<\"Strain:5\"\>", 
   ",", "\<\"Strain:6\"\>", ",", "\<\"Strain:7\"\>", ",", "\<\"Strain:8\"\>", 
   ",", "\<\"StrainPlastic:0\"\>", ",", "\<\"StrainPlastic:1\"\>", 
   ",", "\<\"StrainPlastic:2\"\>", ",", "\<\"StrainPlastic:3\"\>", 
   ",", "\<\"StrainPlastic:4\"\>", ",", "\<\"StrainPlastic:5\"\>", 
   ",", "\<\"StrainPlastic:6\"\>", ",", "\<\"StrainPlastic:7\"\>", 
   ",", "\<\"StrainPlastic:8\"\>", ",", "\<\"Stress:0\"\>", 
   ",", "\<\"Stress:1\"\>", ",", "\<\"Stress:2\"\>", ",", "\<\"Stress:3\"\>", 
   ",", "\<\"Stress:4\"\>", ",", "\<\"Stress:5\"\>", ",", "\<\"Stress:6\"\>", 
   ",", "\<\"Stress:7\"\>", ",", "\<\"Stress:8\"\>", 
   ",", "\<\"vtkValidPointMask\"\>", ",", "\<\"arc_length\"\>", 
   ",", "\<\"Points:0\"\>", ",", "\<\"Points:1\"\>", 
   ",", "\<\"Points:2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.764695556237482*^9, 3.7646957615951757`*^9, 3.764696357440056*^9, 
   3.764696448181961*^9, {3.7646966725660954`*^9, 3.764696698258654*^9}, {
   3.76469673858778*^9, 3.764696777601471*^9}, 3.764696896116466*^9, 
   3.764697006097555*^9, {3.764697308480296*^9, 3.764697351646834*^9}, {
   3.7646973921383133`*^9, 3.7646974008607407`*^9}, 3.764697432698142*^9, 
   3.7646982488164673`*^9, 3.7646984819267473`*^9, 3.764699003940724*^9, 
   3.764699098073904*^9, {3.764699700968767*^9, 3.7646997140407667`*^9}, 
   3.7647000350834007`*^9, 3.7647001568896008`*^9, 3.764700242343973*^9, 
   3.7647005244212713`*^9, 3.764701298018257*^9, 3.772509263729637*^9, 
   3.772509399819662*^9, 3.772509546598551*^9, 3.772509593266782*^9, {
   3.772509675585615*^9, 3.7725097235560303`*^9}, 3.7725101039184647`*^9, 
   3.777028466483144*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"200e2054-edfe-4fc5-abae-b44f60ce676d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots controls", "Section",
 CellChangeTimes->{{3.764694621087249*^9, 3.764694624101427*^9}, 
   3.76469488074481*^9},ExpressionUUID->"09b265d7-d34d-41ee-acbd-\
59054c3806ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"ColorData", "[", 
    RowBox[{"81", ",", "\"\<ColorList\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772509643374148*^9, 3.77250964637399*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8de13681-f05c-45f3-9dd6-9d6b47a06f49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fonts", " ", "=", " ", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rkrules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "fonts"}], "]"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Runge-Kutta Method\>\"", "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvrules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "fonts"}], "]"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", " ", 
      RowBox[{"{", "\"\<FEM\>\"", "}"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.764694627368024*^9, 3.764694631085656*^9}, {
   3.764694668437903*^9, 3.764694702597148*^9}, {3.76469481332498*^9, 
   3.764694862227983*^9}, {3.764694922246256*^9, 3.764694948627974*^9}, {
   3.7646955176714582`*^9, 3.7646955258473883`*^9}, 3.764695768206218*^9, {
   3.764695998572523*^9, 3.764696020740015*^9}, {3.764696053541684*^9, 
   3.764696071357519*^9}, {3.764696714225144*^9, 3.764696776366927*^9}, {
   3.764696882486639*^9, 3.764696885878048*^9}, {3.76469730565318*^9, 
   3.764697325779125*^9}, {3.772509588928543*^9, 3.772509589382782*^9}, {
   3.7725096568086653`*^9, 3.772509692846147*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8e405f6e-704d-4819-985c-b128d4fa40b8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.772509639888177*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"330791c3-6d43-4533-a9a8-27ea42d5af7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rendering RK plots", "Subchapter",
 CellChangeTimes->{{3.764694607125692*^9, 
  3.7646946146052856`*^9}},ExpressionUUID->"7cc4c8e9-42e1-4a7d-89f0-\
9bc6b3af7447"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grku", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<u\>\""}], "}"}]}], "]"}]}], 
       "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<u\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grksigmar", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<sigma_rr\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]sigma_rr\>\"", ",", "Black", ",", "Bold", ",", 
          "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grksigmat", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<sigma_tt\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]sigma_\[Theta]\[Theta]\>\"", ",", "Black", ",", 
          "Bold", ",", "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grkepsr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<eps_rr\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]eps_rr\>\"", ",", "Black", ",", "Bold", ",", 
          "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grkepst", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<eps_tt\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]eps_\[Theta]\[Theta]\>\"", ",", "Black", ",", 
          "Bold", ",", "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grkepspr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<eps_p_rr\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]epsp_rr\>\"", ",", "Black", ",", "Bold", ",", 
          "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grkepspt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"rkdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"rklabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<radius\>\"", ",", "\"\<eps_p_tt\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "rkrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]epsp_\[Theta]\[Theta]\>\"", ",", "Black", ",", 
          "Bold", ",", "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.764694636061698*^9, 3.764694687965783*^9}, {
   3.764694735135461*^9, 3.764694841795622*^9}, 3.764695153534862*^9, {
   3.764695198891841*^9, 3.764695240577817*^9}, {3.764695342171732*^9, 
   3.7646953430431643`*^9}, {3.764695473499021*^9, 3.7646954832726803`*^9}, 
   3.764697431133525*^9, {3.76469761333053*^9, 3.764697630601103*^9}, {
   3.764697720065977*^9, 3.764697734616589*^9}, {3.764697823002021*^9, 
   3.764697834903636*^9}, {3.764697904392769*^9, 3.764697917343362*^9}, 
   3.764698836267316*^9, {3.7647002742790737`*^9, 3.76470031485393*^9}, {
   3.772510092935647*^9, 3.772510102060927*^9}, 3.772510162134663*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"b248a3a3-5a32-4910-aa24-6189aee9f550"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rendering Paraview plots", "Subchapter",
 CellChangeTimes->{{3.764695504120264*^9, 
  3.76469553550977*^9}},ExpressionUUID->"1faf7a62-b666-42c7-a0c4-\
19d65e744e32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gpvu", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<Displacement:0\>\""}], 
           "}"}]}], "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<u\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gpvsigmar", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<Stress:0\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]sigma_rr\>\"", ",", "Black", ",", "Bold", ",", 
          "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gpvsigmat", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<Stress:4\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]sigma_\[Theta]\[Theta]\>\"", ",", "Black", ",", 
          "Bold", ",", "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gpvepsr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<Strain:0\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]eps_rr\>\"", ",", "Black", ",", "Bold", ",", 
          "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gpvepst", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<Strain:4\>\""}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]eps_\[Theta]\[Theta]\>\"", ",", "Black", ",", 
          "Bold", ",", "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gpvepspr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<StrainPlastic:0\>\""}], 
           "}"}]}], "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]epsp_rr\>\"", ",", "Black", ",", "Bold", ",", 
          "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gpvepspt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"pvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"ExtractorByNames", "[", 
         RowBox[{"pvlabels", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<arc_length\>\"", ",", "\"\<StrainPlastic:4\>\""}], 
           "}"}]}], "]"}]}], "]"}], "]"}], ",", "pvrules", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<radius\>\"", ",", "Black", ",", "Bold", ",", "fonts"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]epsp_\[Theta]\[Theta]\>\"", ",", "Black", ",", 
          "Bold", ",", "fonts"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.764695542073202*^9, 3.7646955514573107`*^9}, {
  3.764695823207574*^9, 3.764695862007313*^9}, {3.7646959582531633`*^9, 
  3.7646959660769*^9}, {3.7646967903524523`*^9, 3.764696805458064*^9}, {
  3.764696863992338*^9, 3.764696864142222*^9}, {3.7646974127550707`*^9, 
  3.764697419445751*^9}, {3.764697636986576*^9, 3.764697651601137*^9}, {
  3.764697704275022*^9, 3.764697714849012*^9}, {3.764697811656259*^9, 
  3.764697860385313*^9}, {3.764697924016756*^9, 3.764697935098221*^9}, {
  3.76470035383886*^9, 3.764700377617178*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d97fa9c0-ebfb-4a6d-a41c-e9e4d0ac970e"],

Cell[CellGroupData[{

Cell["Comparison plots", "Section",
 CellChangeTimes->{{3.7646958720291157`*^9, 
  3.764695874868567*^9}},ExpressionUUID->"9a769981-356a-45b9-b93f-\
c775cd47d170"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gcompu", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"gpvu", ",", "grku"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcompsigmar", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gpvsigmar", ",", "grksigmar"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcompsigmat", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gpvsigmat", ",", "grksigmat"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcompepsr", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gpvepsr", ",", "grkepsr"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcompepst", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gpvepst", ",", "grkepst"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcompepspr", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gpvepspr", ",", "grkepspr"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcompepspt", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gpvepspt", ",", "grkepspt"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.764695876941032*^9, 3.764695886623774*^9}, {
   3.764695976461957*^9, 3.764695991085335*^9}, {3.764696809991747*^9, 
   3.7646968305822906`*^9}, {3.764696979391164*^9, 3.76469698306441*^9}, {
   3.7646970560612907`*^9, 3.764697076638443*^9}, {3.7646975844095163`*^9, 
   3.7646976013774233`*^9}, {3.7646976564333363`*^9, 3.76469766624137*^9}, {
   3.764697741287874*^9, 3.764697751599936*^9}, {3.764697864953964*^9, 
   3.764697891479342*^9}, {3.7646979407584963`*^9, 3.764697954912447*^9}, 
   3.7646988028343143`*^9, {3.764699013295395*^9, 3.764699013555264*^9}, {
   3.7646991033363867`*^9, 3.764699104750017*^9}, {3.764699359564704*^9, 
   3.7646993949721413`*^9}, {3.7646995629735317`*^9, 3.764699563122736*^9}, {
   3.764700384782152*^9, 3.764700433644286*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"8acea162-ad82-4161-8dd9-e18c425bc359"],

Cell[CellGroupData[{

Cell[BoxData["gcompepspt"], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"32d97148-1067-455f-af53-300030f88f80"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          Hue[0.58, 1, 0.5]], 
         LineBox[CompressedData["
1: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
PPdYFG7y23bydDS18woqPnZWjHmWH79/NAWkl5tU/WSCWfncX+M3pkfT4Jrj
bsZFp5qbW2brvqxADM1sGJGv95oMM6cc6BjyCfhxuWGNt6b15Sg5sXsMDXg8
wu7HjfemyDslhvZOW3EpavAnk9/mnu4xFJf/9PCrH76YftbLpd3pGGoYtdp2
1MbvZus5A4438Y8hl7oV3Iocf2eey8FfOIboXDe3DZYss4ocyFiq13iOW6Hg
DHNLaX5jYqnl9O7p9o/SzZyHNlkjjKUys4+nl32XbPJpeTc5lj4uyvG6dPkE
M/m/s9ZPjKULbUJvZs1LNQe34zcgltIulQncNDPJ9Pfjv1j6e+irNQOnxJv0
Bx+oWMqW+3SXSmNjzfMxyVsv5H9Fbp9iTy6++sKsMpmf6Cta09WtesGz4aZc
786v6IBH3n279j82cy3Z2n7N5FdU0676jP+qPjBn56tWc+HaV/Rw5L2I5QV8
zBTrp7meekXOnfK6rmmywBwiB+IVLfPv9z1h7GXD3zMwtH+a9d83qOG6zeW+
Iddv/ji6d+HA4a+Xgw0+7Y514+jciIJ1pt4NM6o6zfunvnMc7So873z0kyhD
rovJcVS82JxuLpkxRm4pAOIofFW7rt2bvTHnJPMLHUf1Yvrl6t833Uydccl6
48fRsuYTbg91TTWH/Gj/JT01jp6tn7943LpkU9Jxvnh66WW3ruvJRNOavG8/
qRNPTfNV6NbbN96U67JbPAUvaJly5qq3yd/2yqR46rJp3Pl5nXzNbfx118ST
UwN3r1KlHpt55AWMp8AGQ+oftgs359yvZa0A4un99iZ2C39EmZytlqfGUyvn
7O1zfo4xrZdzjtn5Eijo59QGWVlxZuDYUGsFlUCjvCLLv0xLNFV9lEAfxnbJ
55eQYnrNyzrnMimBmifW77rJmo+qywNJoLHde+yiKRnm9g2F5jY9mUD1j9kW
bZqSaeaReiqBPtuYK+uOe2vKcU1NoLI3zxwrFPfOTKtv/lYoXyLFlR1TIdeI
DyY/jex1Eun0zHJbv0V9NFX9lUgBjQtdfDnos9lOAkykHevu1n4a9sW8OPD9
lWerE2lk0rwDfn2/mXLcPBPpWcHT43cHfze3ywWcSD1X2O7YeTbAsF6G47xS
Eun82V7FMzN8DX66R+2S6LX/tH/GNbptSLlZO4nmxDpl7U70MVR9l0RxrQoe
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
A4/mdv+Tpo/8Ff7F/wNanIQc
          "]]}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          Hue[0.58, 1, 0.5], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1: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
FNuq4OFiQeeNgCrhnxdNTqTkHMFuLaZsNNpbs7nLmkSK+LvjzrTWB8wrzfgC
TSSnoqGJLv/GmjWkHkyksTObz07zeG3KxyUn0pzAndkmpcSYdsFHZ7SyS6L1
TbLWx5aPMReMajSgQe0kchoTMLmFU7Sp6sckGnu/QdaVZVHmSEkISZTRrVLu
UZMjzWdyASbRPbu/J/X1jjCth8OaspJo1WWPNpne4eZVqTeTqMeQL6W2+ISa
Un4kJVGR7I5vG/oGm7trcwWUTC9OL3wY4BtkSnlXK5n29Lm138Xvuanq02Qa
8dlmdhH/APMtp5dJydS53Ypdow/7mXK9r04m/815Oh858tTkt3nr6WQaHL32
Q/TRR6aqZ5MppkGhY5WP3zOvvfseOCfJ+u+zqX78bo9bprzOeVMo6WCd7O16
/2fK9VkrhdpuuRvS4eh5U9W/KeR96GD1lU77zUXlm0/oMCmFqgcWO7E71M/g
09FsdQpdCRg0/X0uX0PkO51C7fz2N+/d2NuQ6+lxCgV4x2RzG/XE6Nj5r8+F
klLo6E7H1Qc3ehl8m2bPm0oVCyc/zXvjoVFLLpBUmr1oYratyfcNVV+nkndq
fFP70vcMPm3hE1OpytBxU493vGMs+trSWhGkUv3xrg7pee6Z1i/b/86pVPJ8
ZpOt2ZPbpqrHU2nsrIS9ZUvdMPm2PpmYSvN6fmt3areH2an6bOsNn0abahRJ
bmJ/xfS4IAmaevzsXmVlqwumqt/TyGF/qYFR7U6Y1mLNeoOkkfuBZV2yNu4x
C/S+YL0S02hC2ym52zdeai4ObWXN+Glk839/cny9wGPeDLFmaHDQHE5Yb35x
5xycUcGqPwDL6zIRvO9IVeuNCuZq4+1JsOonwJlt+QCDx3J4ud/+4hcDOSOA
O0v/AZZydgKYq5mtK8H7l/CJAxeSFxos10fCW1r/uH5g7c5RxpdCfIOlU+e4
masS418Zv/PrUyydnvkvzFuPIgyuPo5UTaefVbYk3d4Zbkg58Xs6Ocw+8bhf
eqgRUY0TYDp5jLzYbXeXEMN6Wb/b0C+d4i7fr1338AtDHs+YdJpxwPeMy+dA
Y5U0POm0Pz1mrW3f58adFnzDpFPNl6n5u7kFGF8WTbbM2pr+K97f71+q53wU
PFUSGPg4l/v3wK+2rlwx5Dm4VKhvVr/XYCcuJ96BV3N7liPjF985xQ0E2HpZ
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
iZo+4n8Dj+V2/5Omj/wV/sX/A+I0hB4=
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          Hue[0.12, 1, 0.9]], 
         LineBox[CompressedData["
1:eJxMnXVcVs0Sx1VQsbCwRcVW7FZEEMXGbmzFVgzsVhC7xUDF7i5QFAs7wMbC
FsVu7Htm3s/lu/5z7/f9ze45D88+c87uzs44dfNt7pMsSZIk0zInSSL/+9+/
DO7//387M5Ww7/U3fSJ7F2qb+8pvOFUV/+IVf8EHG+yusuIH3KPj/To2Cend
W7iGZkiSZF54xkF2rfp+Qz82uUL3q1/g/ou7DK7yGc65edaEkI+0P3s4bHaK
D+jDLj8LHvAuUXfJ/yjD1htv0KM/VQ9zeY0+LnmfM2tfwc7ZF99I9ZL+Y4qf
eDLoBTzV9e2H28+wL980x78aT+HH3TzTbXzM9eYMG5wr3SO4+rSVxfxi4VfL
z1e+dx9esuOrp8c9uPZxp5Zb7tD/p2te3TLEwCHPRw0acYv780rYMD72Bu1/
pr42y/M69psd/y7ffhW9VZniWzJHwza1WoeOvgLvbjX59ONLtO/Ue+f1ehfh
NGPuPt51HvtD1reR9Rx6z9Xl/o47Azvs65T2eST3e+L0jJyNTqH7xhwsuu8E
nPv1k0o5j8MX/th7TorgeiMyuLR4eQQuVKBX1ybh2F+ruND34CH0ifWOjXMM
g0t6v57pfxC+NyDb8tf74WkTa21uvg+uJN3tgZ9uCI7Mt5vPMz/s7LXAneg1
Ln5+9G47/OZB3vettsHLPjT8c2QLXNdmZJqCm+EvWdbnmLkRXls0usin9XAT
l98V262D/3gVrX18Dby1S8vmRVbz92g7dGKXOavQk0/dPvDrCnjf0pixHYLh
LttsZ55aRnv7iDLLii9FD4/usGl+EJ+/z9NpBxIWwVm/7T/VeSH2kXaPr56Z
T3/y6yg5D85bquq7RXPgS+4+v3/Nov3oFvNTd58JF+l5NPuF6fDNka8Kl51G
+8kzs1RcOhUus6pmrX/+2MfuHtCs5xTY+rCdL0+Cq946PaDCRPjFy49jgsfD
i345zkg2jv5r2jdY2mcM+vt8wzdGj4JXlF+7v/JI7BvUuXJy1XD4e9uf0cmH
Yb+hX+GH/YeiNx/f/O31wXCS+eN/VRuE/Y51W1OtHWj454O3sqUawPdhdz5Z
4UH9aH/wXqkKt/ugd3/X3qNGb/SMSQObbuhJfxGZrR+wj+Gf5fa6wzmqWh6h
K3y2YeXpNbvAfp26L9ncyfDPg+duSN8RPWpK+L7h3oZ/Doo78aAdLN6qdlvs
Y8LdYre1hgOu9HuTqZXhnx8v+TmqBfqjz6fsHjcz/LPlruo1hV1y5C60q7Hh
n53rlc/qxd8nqIZfzXENDf/cbHWTZ/Xhj90vdWxYDw4ZntBvbx240fSCo3N4
Gv45uKnlYuBNO8cGxdU0/POJzesbu8PJbtzYe6AGn2/3iyQncrvCHX+UiJri
gn2atO0exFeFw/IEvG5WBe5Zds+PsEpw5toPUuarCJ9onSprYHn6H9inYsF3
ZdFzj+1arlUZ+Pyc2e5HSmE/Ys2hxgVKohfc/7zDDGf42pmM/T4Ww37CHddR
bYsa/vlNn8BjheG7fxcvLlzI8M8ZT66bXQC27m7PFyfDP1tPD+988Lz61g8u
j+GfOwy5X8wRfj1wVfy8XIZ/nnQh4XsO7q/Oom8pOmc3/PPG/FnOZIX142Yx
/POl0WUXZYZ/x250+5XR8M8f5YFO/21s/3mft2e8Jc/m3LdMOsM/F2szckka
7LtUnzL1byp0+ya7FvnYGf656721l1LAffxS7imfHLa+3GPLbQz/bLm/pMng
wdtn3uudBM57LPRV1F97/PPVp98r/Unk8NHP0qdY9cs+0b7IdxeH5D/hm6l6
5++fAE/OvajM9W9wmdLHa1T7Cj+o+abRms/wzJbZve0+cb0qvWr38f3A/byQ
16F32C+ctSLA9S1cM+TcwvWvYWu0rEkTD6+wnuZDXsL1bzeKuPOC/r+/GnnJ
/Tm8/vf6u5ueYt88/dWX9k+4v39Of74Ne4T9jgrFkj+Ixb593VbWTw57u/aT
nLbdQz/Qf0fpTHfh7vIDiYEzLEje6NEtOGJ92fZ1b8L9Qjtab2z0n+PC9OFZ
rqGfuX/Af2w09+f3/vGCp1ewd0pmv6bBZeyjHKrt2nMRfaw+gOHi1RZcnHAO
e/3znaH/gM7xcV6n0csNkTcE+JG/h23uk/DsJQMzTTkOu2xdni8+An555Eyp
ZkfpPyjKesEPR6/1JE/DvIfhj18atJsaxv2uSjmi19uD6I1yrhvW8gAs7jR8
H/1vcvs1P/9edHm7mr4bPZlPi50fdqLvGjHhSJsdcMcZ2y5EbINTr7wdU2gr
HLbLJm7WZtjnZOmvnzfCmW9623hvgI/HBVoekOsP/Lkvb7G16Pp6tRo+nzdt
9e+r4OHlqjTotBIu6Nmj7elg+GqbeT1LLIcn9D3it3Ap1ysx7uXkn0Hod+c6
zO+6GA5c62794uCKMqAXwE/PLg0PmgfPuxt5/s8cuIY13eoxG379L/eLizPh
ZZnqfyk3g/upU2hYsuXT0L9UXpMhaSBsDeY8vQOwb6IPTPTfvoVcKk2Gt05u
Vn/lRLjN4nFtbCfAyTdv8ek3Dt57+ObQa2PgLpeTTq46GtavYyQc/qmdNQS5
n97yQj4MPWt26RH9VPHYc9WHoA92TX173SD0PE0rPU/ta/jnbt0+Dx6A/ahh
c5Le6Wf452mH07v35fdwY/kLx029Df+8Qyb8sLjnYT6Gf77Wt9797lxvxvOg
1rW6oVdJONljaxf6f576/ZCMnQ3/7Jhr0siOtHcvU3fuQ2/DP3sMXVmnPRzc
KmTbjraGf+598ZBDG/jb6O9nx7Qy/PPsAreetEDX17Xm8L+9Yz7tbor99tOb
kmRvYvjnmOv2E7zglDIAG/J5DvxxdvZqgN4tQ9uq++uhZyjgXzdXXfo/WtGa
UXui97P+eq9q0d56ug1p6mH4Z2v2EeoOy/QtjxvspA84+MqGsK1vXOCxYc/C
WlSDi13McPZwFe7n9oPqN50qo/t/6P10WkX0cjaLP74vz/0+zHLiX+tyhn8u
+jZdRBnsq8kLdGnDP3t5Fp9VEtblHGfDP8vXWxz+EHC+5Ymi9Ldq6dduRYtw
/YbbnAbPLWT456NeE74VgK3J1uyO+WnfUifo6Em/Xd3inNfwz3Z/Qxc4wh1y
FT/zI5fhn0u1vtElp+Gf3Sc/OZud/sXdl8pm+Oee1htqFvTjI1Ok+5MZfeDM
crl6ZDL886pO1leC/fndMyqXS2/451MHPZelM/yzNZqTpDX880v7br1S036C
NRu8Ymf4Z/te4yumNPxzPmvAJDf8s7z+2Rr+uc7rzX2T0f5J22yhV5MY/rlf
rdNV/qVLZNfxvtdD/sCv5wU/TvEbXrru7PsBP9Phnw9+/nMjAf3zOXkgoa+5
1zDnuq/ojd+NKJr6C/w7yfpKgz/BMh2M+UD7NoV/N3d7j25btWjXjW/hvQ1b
+qZ7A3fuNHGcXzycTl54X8KHp8Qs84iDewfZbt7yHM6ypczBDM+4/qnwDpEj
nsCDrky7FvsI+zyP9z/yfJioh+vy0APsR8lwuY99YZ1QwzecfXI8iYEn1Zhf
pP5t2pduZnmYm/Qv3iXbDexnDM/SfPw1dJmdP4+GnwcPGNgoiv4W7Fw2dt9l
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
4P51f3Eruu4nboJ1/3A9/el+4Wp03R9cSX+6H7gce93/W4K9Lh8tgnV/bx6s
+3mzYd2/m0F/ul8XiK77c/7ouh83EV3338bBut82Gtb9tRGw7qf5wbp/NgjW
7ZkBsO6P9YV1P6wX96P7Xz1g3e/qgr3ub3VE1z9fe3Tdv2oD635VS1j3p5rR
XvejvGDdf2qAve431YV1f6k2rPtJNWmv+0euxniW/aJqxnjWgABjPIs7rUB7
3f8pi677PSWN8Sz7O8WN8awHSo3xLPs3BWHdr3EyxrPszzga41n2Y3LSn+6/
ZDPGs+y3OMC6v5LRGM+6YAzr/klqWPdLUhrjWfZHbI3xLPshSY3xLPsff/4w
njWBOaz7G9//JN6v7md8gXX/4iOs+xVvaa/7E/Gw7kfEwbr/8AzW/YbHsO4v
xMK6n3CX6+n+wW1Y9wtuYK/7A1dh3Q+4Auv6/wVY1/vPwrq+Hwnrev4JWL+O
CK6v6/WH0XV9PhTW9fj9sK6/74F1vX0n/en6+lZ0XU/fBOv6+XpY18vXwLo+
vgrW9fDlsLrnJVxP17sXoev69nxY17PnYK/r1zPQdb06ENb1aX/sdT16Eqzr
z+Ox1/Xm0bCuL4+AdT3Zj/b6ujYYXdeLB8K6PtwX1vXgXrTX9d8e6Lre2xXW
9d1O2Ov0yhvW9ds22Ot6bUtY12ebJdqH63psY3Rdf20I63prXVjXV2tzPV1P
rQnr+mkNYzzrAokxnmV9tLIxnrWAkzGeZf2zrDGeZb2zFKzrm87GeJb1zCLG
eJb1y4Lcj65XOsG6PpmHz6/rkbnQdf0xmzGeZb3RwRjPsr6Y0RjPeiDHGM+y
fpjGGM+yXpgS1vVBW2M8y3pgUmM8a0K334ms632/fifen67vfUfX9bwvsK7f
fcRe1+veoev63GtY1+PisNf1t2fout72GNb1tVhY19Puwbp+FgPretmNxP7D
dX3sKrquh12Bdf3rIvej613n0HV9KxLW9awTsK5fRdBe16vC0XV9KgzW9aj9
sK4/7YF1OriT/nR9aRufR9eTNqPr+tF62ut60RpY14dWwboeFEx7Xf9Ziq7r
PYtgXd+ZD+t6zhxY129mwrpeMw3W4eIP63rMJNhPE5DDWn55DJ9X0zGPRNfj
mX6wbtcM5vO4aAFbOMhWTuzDUi69fG/aN9IDhuhynDqqK7o+PjrBHY91qdzf
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
mA==
          "]]}}}, {}, {}, {}, {}}}, {
    PlotRange -> All, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0.03906250000000001, 0}, 
     PlotRange -> {{0.1, 4.}, {-1.9056*^-18, 0.0054243}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.03906250000000001, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox["\"\[CapitalDelta]epsp_\[Theta]\[Theta]\"", 
          GrayLevel[0], Bold, 16, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"radius\"", 
          GrayLevel[0], Bold, 16, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> Directive[
       GrayLevel[0], 16], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 4.}, {-1.9056*^-18, 0.0054243}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    Hue[0.58, 1, 0.5]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    Hue[0.58, 1, 0.5]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    Hue[0.58, 1, 0.5]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.58, 1, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.58, 1., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.58`", ",", "1", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.58, 1, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.58, 1, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], 
                   "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Runge-Kutta Method\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    Hue[0.12, 1, 0.9]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    Hue[0.12, 1, 0.9]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.12, 1, 0.9], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.12, 1., 0.6000000000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.12`", ",", "1", ",", "0.9`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.12, 1, 0.9]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.12, 1, 0.9], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.772509371829924*^9, 3.772509401864161*^9, 3.772509547929861*^9, 
   3.772509594921158*^9, {3.772509678139249*^9, 3.7725097246591787`*^9}, 
   3.772510106333295*^9, 3.777028470557178*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"028403ba-1985-4f10-89cb-a00f39b6a9ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exporting plots", "Section",
 CellChangeTimes->{{3.76469933837332*^9, 
  3.7646993458360157`*^9}},ExpressionUUID->"1614ee2f-2677-4b5a-8ec3-\
62e2c15c4eb6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imageres", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RedenderplotsQ", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"RedenderplotsQ", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"\"\<elastoplastic_comp_u.png\>\"", ",", "gcompu", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<elastoplastic_comp_sigma_r.png\>\"", ",", "gcompsigmar", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<elastoplastic_comp_sigma_t.png\>\"", ",", "gcompsigmat", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<elastoplastic_comp_eps_r.png\>\"", ",", "gcompepsr", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"\"\<elastoplastic_comp_eps_t.png\>\"", ",", "gcompepst", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<elastoplastic_comp_eps_p_r.png\>\"", ",", "gcompepspr", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<elastoplastic_comp_eps_p_t.png\>\"", ",", "gcompepspt", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "imageres"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.764699348335642*^9, 3.764699356204195*^9}, {
  3.7646994005478573`*^9, 3.7646994076517982`*^9}, {3.7646994493016376`*^9, 
  3.764699480629333*^9}, {3.764699517211008*^9, 3.7646995518510447`*^9}, {
  3.764699654909137*^9, 3.7646996971219063`*^9}, {3.764700445404956*^9, 
  3.7647004571997213`*^9}, {3.764700500213418*^9, 3.764700522873824*^9}, {
  3.772509363554311*^9, 3.77250936434449*^9}, {3.772509706982469*^9, 
  3.772509707413823*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"8e7eea94-1121-4aab-a5a7-27ba39515af4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BC data for RK approximation", "Section",
 CellChangeTimes->{{3.764699113533759*^9, 
  3.764699128837474*^9}},ExpressionUUID->"9adabbd8-62a3-48bc-9af2-\
5ff6dd711dd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<ur and \[Sigma]r at Re = \>\"", ",", 
   RowBox[{
    RowBox[{"pvdata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"ExtractorByNames", "[", 
        RowBox[{"pvlabels", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Displacement:0\>\"", ",", "\"\<Stress:0\>\""}], 
          "}"}]}], "]"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.764696308332012*^9, 3.764696320529767*^9}, {
  3.764696462355822*^9, 3.764696501848504*^9}, {3.76469654745685*^9, 
  3.764696559216433*^9}, {3.764697014918445*^9, 3.764697035663184*^9}, {
  3.7646991402070704`*^9, 3.764699182807559*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4030d4ab-71a6-4239-b0dd-5f0501c51483"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ur and \[Sigma]r at Re = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.00023706`"}]}], "}"}]}],
  SequenceForm["ur and \[Sigma]r at Re = ", {0, -0.00023706}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.764699175216118*^9, 3.764699183122395*^9}, {
   3.764699701862605*^9, 3.764699715571422*^9}, 3.764700035798833*^9, 
   3.7647001583344793`*^9, 3.764700243822002*^9, 3.7647005298142357`*^9, 
   3.764701304504468*^9, 3.7725092693676558`*^9, 3.7725094021229486`*^9, 
   3.77250954814924*^9, 3.772509595256053*^9, {3.772509678395219*^9, 
   3.772509696411112*^9}, 3.772509729278186*^9, 3.772510111007575*^9, 
   3.777028474518096*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"e9ba28d4-fce9-4595-823d-0ee4efdcb054"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1320, 1035},
WindowMargins->{{0, Automatic}, {53, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 68, "Section",ExpressionUUID->"27a31806-903c-4c8c-9e8b-a017871447a3"],
Cell[743, 27, 267, 5, 31, "Input",ExpressionUUID->"2dee00b5-f4ce-4041-8f31-a4f79100d19c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047, 37, 274, 4, 65, "Subchapter",ExpressionUUID->"6e910120-a3db-4ea9-b498-6ea54969cc85"],
Cell[1324, 43, 2971, 70, 354, "Input",ExpressionUUID->"a42d8661-0daa-4689-b59d-821f21c3049b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4332, 118, 217, 4, 65, "Subchapter",ExpressionUUID->"726c7637-3345-47a4-9356-d09f066d87ce"],
Cell[4552, 124, 803, 18, 78, "Input",ExpressionUUID->"e12ea276-efc2-471b-9bd4-155992e6ebb6"],
Cell[CellGroupData[{
Cell[5380, 146, 112, 1, 31, "Input",ExpressionUUID->"bf43ddf3-a32a-4239-a833-ca10375125a9"],
Cell[5495, 149, 1228, 18, 35, "Output",ExpressionUUID->"0da76269-f72d-4e1a-b4b6-2c62de050661"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6772, 173, 317, 5, 65, "Subchapter",ExpressionUUID->"938da9f5-dbfb-4145-9c7e-d5b937d3f5c6"],
Cell[CellGroupData[{
Cell[7114, 182, 1256, 31, 124, "Input",ExpressionUUID->"81a5d3b4-291e-4b87-8e0d-f921969edca3"],
Cell[8373, 215, 2034, 31, 105, "Output",ExpressionUUID->"99fe8e0d-f2b7-429f-a290-12b022e2890e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10456, 252, 218, 5, 65, "Subchapter",ExpressionUUID->"3e93b563-6a9f-4dd9-905d-58666a7c0544"],
Cell[10677, 259, 705, 20, 78, "Input",ExpressionUUID->"909362ee-3571-482b-a79f-5883fce2533c"],
Cell[CellGroupData[{
Cell[11407, 283, 113, 1, 31, "Input",ExpressionUUID->"0309dfa3-7828-4b7d-9dd7-4f643bb6acc6"],
Cell[11523, 286, 2037, 31, 105, "Output",ExpressionUUID->"200e2054-edfe-4fc5-abae-b44f60ce676d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13597, 322, 181, 3, 68, "Section",ExpressionUUID->"09b265d7-d34d-41ee-acbd-59054c3806ac"],
Cell[13781, 327, 295, 6, 31, "Input",ExpressionUUID->"8de13681-f05c-45f3-9dd6-9d6b47a06f49"],
Cell[14079, 335, 2281, 48, 124, "Input",ExpressionUUID->"8e405f6e-704d-4819-985c-b128d4fa40b8"],
Cell[16363, 385, 147, 2, 31, "Input",ExpressionUUID->"330791c3-6d43-4533-a9a8-27ea42d5af7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16559, 393, 168, 3, 65, "Subchapter",ExpressionUUID->"7cc4c8e9-42e1-4a7d-89f0-9bc6b3af7447"],
Cell[16730, 398, 6369, 169, 331, "Input",ExpressionUUID->"b248a3a3-5a32-4910-aa24-6189aee9f550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23136, 572, 171, 3, 65, "Subchapter",ExpressionUUID->"1faf7a62-b666-42c7-a0c4-19d65e744e32"],
Cell[23310, 577, 6338, 168, 331, "Input",ExpressionUUID->"d97fa9c0-ebfb-4a6d-a41c-e9e4d0ac970e"],
Cell[CellGroupData[{
Cell[29673, 749, 163, 3, 68, "Section",ExpressionUUID->"9a769981-356a-45b9-b93f-c775cd47d170"],
Cell[29839, 754, 2478, 65, 170, "Input",ExpressionUUID->"8acea162-ad82-4161-8dd9-e18c425bc359"],
Cell[CellGroupData[{
Cell[32342, 823, 115, 1, 31, "Input",ExpressionUUID->"32d97148-1067-455f-af53-300030f88f80"],
Cell[32460, 826, 76387, 1333, 332, "Output",ExpressionUUID->"028403ba-1985-4f10-89cb-a00f39b6a9ca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108896, 2165, 161, 3, 68, "Section",ExpressionUUID->"1614ee2f-2677-4b5a-8ec3-62e2c15c4eb6"],
Cell[109060, 2170, 2388, 48, 262, "Input",ExpressionUUID->"8e7eea94-1121-4aab-a5a7-27ba39515af4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111485, 2223, 173, 3, 68, "Section",ExpressionUUID->"9adabbd8-62a3-48bc-9af2-5ff6dd711dd6"],
Cell[CellGroupData[{
Cell[111683, 2230, 809, 18, 31, "Input",ExpressionUUID->"4030d4ab-71a6-4239-b0dd-5f0501c51483"],
Cell[112495, 2250, 839, 17, 25, "Print",ExpressionUUID->"e9ba28d4-fce9-4595-823d-0ee4efdcb054"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

